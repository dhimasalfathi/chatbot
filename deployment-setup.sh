#!/bin/bash
# deployment-setup.sh
# Script untuk setup deployment ke GCP dengan LM Studio di laptop lokal

echo "========================================"
echo "   GCP Deployment Setup with Local LM"
echo "========================================"

# Detect current environment
if [[ "$NODE_ENV" == "production" ]]; then
    echo "üî¥ Running in PRODUCTION mode (GCP)"
    ENV_TYPE="production"
else
    echo "üü° Running in DEVELOPMENT mode (Local)"
    ENV_TYPE="development"
fi

echo ""
echo "üìã DEPLOYMENT OPTIONS:"
echo "========================================"
echo "1. Option 1: Ngrok Tunnel (Recommended)"
echo "   - Install ngrok di laptop"
echo "   - Run: ngrok http 1234"
echo "   - Set LM_BASE_URL ke ngrok URL"
echo ""
echo "2. Option 2: Public IP + Port Forward"
echo "   - Configure router port forwarding"
echo "   - Set LM_BASE_URL ke public IP:1234"
echo ""
echo "3. Option 3: VPN/Tailscale"
echo "   - Setup VPN antara GCP dan laptop"
echo "   - Use private VPN IP"

echo ""
echo "üîß CURRENT CONFIGURATION:"
echo "========================================"
echo "Node Environment: $NODE_ENV"
echo "LM_BASE_URL: ${LM_BASE_URL:-'Not set'}"
echo "PORT: ${PORT:-5000}"

echo ""
echo "üí° RECOMMENDED SETUP STEPS:"
echo "========================================"

if [[ "$ENV_TYPE" == "production" ]]; then
    echo "FOR GCP PRODUCTION:"
    echo "1. Di laptop, install ngrok:"
    echo "   curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null"
    echo "   echo 'deb https://ngrok-agent.s3.amazonaws.com buster main' | sudo tee /etc/apt/sources.list.d/ngrok.list"
    echo "   sudo apt update && sudo apt install ngrok"
    echo ""
    echo "2. Setup LM Studio di laptop:"
    echo "   - Host: 0.0.0.0"
    echo "   - Port: 1234"
    echo "   - Enable external requests"
    echo ""
    echo "3. Run ngrok tunnel di laptop:"
    echo "   ngrok http 1234"
    echo ""
    echo "4. Set environment variable di GCP:"
    echo "   export LM_BASE_URL=\"https://xxxxx.ngrok.io/v1\""
    echo ""
    echo "5. Restart server di GCP:"
    echo "   pm2 restart chatbot"
else
    echo "FOR LOCAL DEVELOPMENT:"
    echo "1. Setup LM Studio:"
    echo "   - Host: 0.0.0.0"
    echo "   - Port: 1234"
    echo "   - Enable external requests"
    echo ""
    echo "2. Auto-detection will handle the rest"
fi

echo ""
echo "üåê ALTERNATIVE: Environment Variables"
echo "========================================"
echo "You can set these environment variables:"
echo ""
echo "# For ngrok tunnel:"
echo "export LM_BASE_URL=\"https://xxxxx.ngrok.io/v1\""
echo ""
echo "# For public IP (replace with your public IP):"
echo "export LM_BASE_URL=\"http://YOUR_PUBLIC_IP:1234/v1\""
echo ""
echo "# For local IP (current laptop IP):"
echo "export LM_BASE_URL=\"http://192.168.226.14:1234/v1\""

echo ""
echo "üîí SECURITY NOTE:"
echo "========================================"
echo "- Ngrok provides HTTPS and authentication"
echo "- Public IP requires firewall configuration"
echo "- VPN is most secure for production use"

echo ""
echo "‚úÖ Quick Test Commands:"
echo "========================================"
echo "# Test LM Studio connection:"
echo "curl -X POST \$LM_BASE_URL/chat/completions \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\"model\":\"your-model\",\"messages\":[{\"role\":\"user\",\"content\":\"Hello\"}]}'"
echo ""
echo "# Test chatbot server:"
echo "curl http://localhost:5000/healthz"
